module Plasmacore

uses Geometry [export]
uses Math/Best

$include Plasmacore/Display
$include Plasmacore/Godot
$include Plasmacore/Drawable

class Plasmacore [essential api singleton]
  PROPERTIES
    gd_root      : GDNode
    gd_scene     : GDNode
    gd_config    : GDNode
    gd_assets    : GDNode
    gd_drawables : GDNode

    drawables_list   = Drawable[]
    drawables_lookup = [String:Drawable]

    drawable : Drawable
    angle = Radians(0)

  METHODS
    method init
      Global.output = Log
      Global.error = ErrorLog

    method draw
      if (drawable)
        drawable.draw( RealXY(-1,0), 0.5, angle )
        drawable.draw( RealXY( 1,0), 0.25 )
      endIf

      (forEach in drawables_list).on_finished_drawing

    method on_new_scene_2dx( gd_root, gd_config )
      gd_scene  = gd_root.last
      gd_assets = gd_config//Assets
      if (gd_assets) gd_drawables = gd_assets//Drawables

      trace gd_root
      trace gd_scene
      trace gd_config
      trace gd_assets
      trace gd_drawables

      drawables_list.clear
      drawables_lookup.clear

      println "Plasmacore new scene!"
      drawable = Drawable( "MacrossLogo" )

    method on_update( dt:Real64, display_size:XY )
      Display.size = display_size

      if (drawable) angle += Degrees(30*dt)->Radians
      draw
endClass
