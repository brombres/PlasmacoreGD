module Plasmacore

class Graphic [essential]
  GLOBAL PROPERTIES
    lookup       : [String:GDObject]
    next_z_index : Int32

  PROPERTIES
    node : GDObject

    position : XYZ
    scale    = XYZ(1,1,1)
    rotation : XYZ

  METHODS
    method init( name:String )
      if (not lookup) lookup = [String:GDObject]

      contingent
        node = lookup[ name ]
        sufficient (node)

        if (Plasmacore.gd_graphics) node = Plasmacore.gd_graphics[name]
        sufficient (node)

        if (Plasmacore.gd_assets) node = Plasmacore.gd_assets[name]
        sufficient (node)

        if (Plasmacore.gd_config) node = Plasmacore.gd_config[name]
        sufficient (node)

        node = Plasmacore.gd_scene[name]
      endContingent

      if (node)
        lookup[ name ] = node
        init( node.cloned )
      endIf

    method init( node )
      if (node)
        Plasmacore.gd_config.add( node )
        node.visible = true
        node.pixel_scale = 1.0  # only affects Sprite3D
      endIf

    method cloned->Graphic
      return Graphic( node.cloned )

    method on_cleanup
      delete

    method base_size->XY
      if local size = node.meta( "size" )
        return size
      endIf

      if local frames = node.sprite_frames
        if local frame = frames.texture("",0)
          return frame.size
        endIf
      endIf
      return XY(0,0)

    method delete
      if (node)
        if (node.parent)
          node.parent.remove( node )
        endIf
        node.delete
        node = GDObject()
      endIf

    method draw
      if (Plasmacore.is_2dx)
        node.position = XYZ( position.x, Display.size.y - position.y )
      else
        node.position = position
      endIf
      node.scale = scale
      node.rotation = rotation
      if (Plasmacore.is_2d)
        node.z_index = next_z_index
        ++next_z_index
      endIf

    method set_scale( s:Real64 )
      @scale = XYZ( s, s, s )

    method set_scale( @scale )

endClass
