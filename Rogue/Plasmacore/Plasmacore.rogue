module Plasmacore

uses Geometry [export]
uses Math/Best

$include Plasmacore/App
$include Plasmacore/Display
$include Plasmacore/Drawable
$include Plasmacore/Godot
$include Plasmacore/View
$include Plasmacore/ViewState

class Plasmacore [essential api singleton]
  PROPERTIES
    gd_root      : GDObject
    gd_scene     : GDObject
    gd_config    : GDObject
    gd_assets    : GDObject
    gd_drawables : GDObject

    is_2d  : Logical
    is_2dx : Logical
    is_3d  : Logical

  METHODS
    method init
      Global.output = Log
      Global.error = ErrorLog

    method draw
      Drawable.next_z_index = 1
      ViewState.on_draw
      View.on_draw
      ViewState.after_draw

    method on_new_scene( mode:Int32, gd_root, gd_config )
      is_2dx = (mode == 1)
      is_2d = (mode == 2)
      is_3d = (mode == 3)

      gd_scene  = gd_root.last
      gd_assets = gd_config//Assets
      if (gd_assets) gd_drawables = gd_assets//Drawables

      ViewState.on_scene_change

    method on_update( dt:Real64, display_size:XY )
      Display.size = display_size
      ViewState.update( dt )
      View.update( dt )

      draw
endClass
