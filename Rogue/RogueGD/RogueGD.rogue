module RogueGD

uses Geometry [export]
uses Graphics [export]
uses Math/Best

$include RogueGD/App
$include RogueGD/Box
$include RogueGD/Display
$include RogueGD/Graphic
$include RogueGD/Graphics
$include RogueGD/Godot
$include RogueGD/View
$include RogueGD/ViewState

class RogueGD [essential api singleton]
  PROPERTIES
    gd_rogue      : GDObject

    gd_root       : GDObject
    gd_plasmacore : GDObject
    gd_scene      : GDObject

    gd_config     : GDObject
    gd_assets     : GDObject
    gd_assets_graphics   : GDObject
    gd_graphics   : GDObject

    message_handlers = [String:Function(GDVariant)->GDVariant]
    views = View[]

  METHODS
    method init
      Global.output = Log
      Global.error = ErrorLog
      on_message( "RogueGD.update", (args) => RogueGD.update(args) )

    method on_message( name:String, handler:Function(GDVariant)->GDVariant )
      message_handlers[ name ] = handler

    method on_message( name:GDVariant, args:GDVariant )->GDVariant
      local handler = message_handlers[ name ]
      if (handler) return handler( args )
      else         return GDVariant()

    method register( view:View )
      if (not views.contains(view)) views.add( view )

      on_message( "$.configure"(view.type_name), view=>configure )
      on_message( "$.draw"(view.type_name), view=>draw )
      on_message( "$.update"(view.type_name), view=>update )

    method update( args:GDVariant )->GDVariant
      gd_rogue = args[0]
      Display.dt = args[1]
      Graphics.on_update_begin

      return $defaultValue<<GDVariant>>

endClass
